#ifndef __CIM_HANDLER_HH__
#define __CIM_HANDLER_HH__

#include "mem/abstract_mem.hh"
#include "mem/mem_ctrl.hh"
#include "sim/sim_object.hh"

// below header files will be automatically generated by gem5
#include "debug/CIMDBG.hh"
#include "params/CimHandler.hh"

namespace gem5
{
namespace memory
{

class CimHandler : public SimObject
{
  private:
    Addr cimAddress;
    std::vector<Tick> operationsLatency;
    //
    Tick unitReleaseTime;

  public:
    CimHandler(const CimHandlerParams &_p);
    ~CimHandler();

    inline bool isCimAddressRange(const Addr &addr) const
    {
        return (addr >= cimAddress) && (addr < (cimAddress + 0x1000000));
    }

    void cimFetchCommand(AbstractMemory *abstract_mem, PacketPtr pkt);

    Tick getCimLatency(const Addr &addr);
};
} // namespace memory
} // namespace gem5

#endif //__CIM_HANDLER_HH__
